%% Sensitivity analysis long

%initialize casadi%
addpath('C:\Program Files\casadi-3.6.4-windows64-matlab2018b')
cd ..
addpath(genpath('.'));
import casadi.*
cd MartinG_OptiTool
%% Runs sesnsitivity analysis for
% mass
%inertia
%CoGx
%CoGz
% track
%wheelbase



%%%%%%%%%%%%%%%%%%%% Car parameters %%%%%%%%%%%%%%%%%%%%
car.tracks       = 2;
car.m            = 280 ;                      % weight of the car [kg]
car.Izz          = 100;                      % moment of inertia [kg m^2]
car.wheelbase    = 1.53;                    % distance between the front and rear axles [m];
car.track        = 1.2;                      % distance between right and left wheel
car.COGr         = 0.4876+ 0.4876*0.1;                       % COG distribution 0-1 scale on rear
car.COG          = car.wheelbase*(car.COGr); % distance of Center Of Gravity (COG) from the front axle [m];
car.l_f          = car.COG;                  % distance of the front axle form the COG [m];
car.l_r          = car.wheelbase - car.COG;  % distance of the rear axle form the COG [m];Mf_maxgear
car.COGz         = 0.3 ;                      % height of COG from ground
car.wheelradius  = 0.205;                    % radius of the wheels [m]
car.steeringAngle_max = 20/180*pi;           % Maximum allowed steering angle
car.steeringAngle_maxRate = 400/180*pi;      % Maximum allowed steering angle [rad/s]
car.steeringAngleRear_max = 6/180*pi;
%% Motor parameters
car.gearRatio = 11.46 ;
car.Mf_max       = 29.1 * 2/car.tracks * car.gearRatio ;         % maximum torque generated by a motor on the front axle [Nm]
car.Mf_slewRate  = 16000;                      % maximum slew rate of the generated torque on the rear axle [Nm/s]0.5 je ca 1000/s idk preco
car.Mf_jerk       = 800;                           % 1000 bolo cca okay
car.Mr_max       = 29.1 * 2/car.tracks * car.gearRatio ;         % maximum torque generated by a motor on the rear axle [Nm]
car.Mr_slewRate  = 100;                      % maximum slew rate of the generated torque on the rear axle [Nm/s]
car.Yt_max       = (car.Mf_max/car.wheelradius + car.Mr_max/car.wheelradius)*car.track;                    % maximum Yaw moment
car.PwrMax       = 80000;
car.PwrMin       = -40000;
car.maxSpeed     = 40;                        %m/s
car.AcpCapacity  = 7.4; %kWh
car.BrakeBalance = 0.3; % pomer na zadok zle zle zle
car.PowertrainType     = 0; %-1 REAR WHEEL DRIVE 0 distribution 50 50 no TV
                        % 1 basic diff 2 javiry diff 3 optimum TV


%car.car.trqSpeedCharTrq   = [  -0.01 -14.5 -18   -25  -28   -29.1  -29.1 29.1    29.1      28    25   18    14.5  0.01];
%car.car.trqSpeedCharSpeed = [  10    11600 14000 16200 20000 22000 24000];
car.trqSpeedCharTrq   = [ 29.1   29.1  28    25    18    14.5  0.01]*car.gearRatio/car.wheelradius;
car.trqSpeedCharSpeed = [  0    11600 14000 16200 20000 22000 24000]*pi/30/car.gearRatio; %calculatd on wheel omega

car.trqSpeedCharTrq   = [ 29.1   29.1    25    18     0.01]*car.gearRatio/car.wheelradius;
car.trqSpeedCharSpeed = [  0    11600 16200 20000  24000]*pi/30/car.gearRatio; %calculatd on wheel omega

%TrqSpeedMap = casadi.interpolant('LUT','bspline',{car.car.trqSpeedCharSpeed},car.car.trqSpeedCharTrq);
%TrqSpeedMap(2.5)


%% Tire and suspension parameters
car.E = 0.23;
car.D = 1;
car.B = 0.3;
car.C = 1;

E = 0.23;
D = 1.2;
B = 0.2;
C = 1.3;


car.Sus_t = 0.5;                          % suspension time constant for 1st order system
car.tire_fxFactor = 1.5 ;                 % max Fx = Fz * tire_fxFactor
car.tire_fyFactor = 1.3 ;                 % max Fy = Fz * tire_fyFactor
%car.ftire = @(alph, Fz, p)(alph/pi*180)* Fz * car.tire_stifness ; %
%car.ftire = @(alph,Fz, p)  Fz* car.D*sin(car.C*atan(car.B*(alph/pi*180)  - car.E*atan(car.B*(alph/pi*180))));

%car.ftire = @(alph,Fz, p)  Fz.* D.*sin(C.*atan(B.*(alph./pi.*180)  - E.*atan(B.*(alph/pi.*180))));
car.ftire = @(alph, Fz, car)(alph./pi.*180)./15.* Fz .* car.tire_fyFactor ; %

%% Aerodynamics parameters
car.CL  = -4.15;
car.CD  = 1.55;
car.A   = 1;
car.COP = 0.5;    % Center of pressure on rear ratio
car.wingLength_f = 0.9;
%% gepd parameters
car.gepdToggle = 0;
car.gepdMass = 10; %mass of gepd in kg
car.gepdMaxPower = 12000;               % Watts        % Force in Newton
car.gepdForceCoeff = [90*9.81, 0]; % Force in Newton -16.35
car.gepdCapacity = 1.7;                 % capacity of gepd battery in kWh
car.gepdSlewRate = 1/3;                 % 0 to MaxPower percent in 3 seconds
%opti.subject_to(cl/cd <=3)

car.m = car.m + car.gepdToggle*car.gepdMass;

%% environment parameters
car.g = 9.81;
car.airDensity = 1.225;

trackName = 'doubleTurn';


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

outputName = datestr(now);
outputName = strrep(outputName,':','-');
outputName = outputName(find(~isspace(outputName)));
outputName = append(outputName,".txt");
outputName = append("./results/",outputName)
fileID = fopen(outputName,'w');
fprintf(fileID,"%s\n",'parameter 0% +10% -10%');
%fprintf(fileID,"%s\n",'parameter +10% 0% -10%');


%% Run simulations
%%  Mass sensitivity
testCar = car;
fprintf(fileID,"%s","massTime ");

mass0 = runLaptime(testCar,trackName);
fprintf(fileID,"%.3f ",mass0);


testCar.m = car.m * 1.1;
massPlus10 = runLaptime(testCar,trackName);
fprintf(fileID,"%.3f ",massPlus10);

testCar.m = car.m * 0.9;
massMinus10 = runLaptime(testCar,trackName);
fprintf(fileID,"%.3f ",massMinus10);
fprintf(fileID,"\n");

%% Ineria sensitivity
disp("starting ensitivity plus 10")
testCar = car;
fprintf(fileID,"%s","inerita ");
fprintf(fileID,"%.3f ",mass0);

testCar.Izz = car.Izz * 1.1;
inertiaPlus10 = runLaptime(testCar,trackName);
fprintf(fileID,"%.3f ",inertiaPlus10);

disp("sensitivity minus10")
testCar.Izz = car.Izz * 0.9;
inertiaMinus10 = runLaptime(testCar,trackName);
fprintf(fileID,"%.3f ",inertiaMinus10);

fprintf(fileID,"\n");