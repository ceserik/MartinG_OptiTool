function car = carCreate(carName,gepdToggle,PowertrainType)
%CARCREATE Summary of this function goes here
%   Detailed explanation goes here
car = carClass;
switch carName
    
    case "HAFO24"
        %%%%%%%%%%%%%%%%%%%% Car parameters %%%%%%%%%%%%%%%%%%%%
        car.tracks       = 2;
        car.m            = 280 ;                      % weight of the car [kg]
        car.Izz          = 100;                      % moment of inertia [kg m^2]
        car.wheelbase    = 1.53;                    % distance between the front and rear axles [m];
        car.track        = 1.2;                      % distance between right and left wheel
        car.COGr         = 0.5;                       % COG distribution 0-1 scale on rear
        car.COG          = car.wheelbase*(car.COGr); % distance of Center Of Gravity (COG) from the front axle [m];
        car.l_f          = car.COG;                  % distance of the front axle form the COG [m];
        car.l_r          = car.wheelbase - car.COG;  % distance of the rear axle form the COG [m];Mf_maxgear
        car.COGz         = 0.3 ;                      % height of COG from ground
        car.wheelradius  = 0.205;                    % radius of the wheels [m]
        car.steeringAngle_max = 25/180*pi;           % Maximum allowed steering angle
        car.steeringAngle_maxRate = 100/180*pi;      % Maximum allowed steering angle [rad/s]
        car.steeringAngleRear_max = 6/180*pi;
        %% Motor parameters
        car.gearRatio = 11.46 ;
        car.Mf_max       = 29.1 * 2/car.tracks * car.gearRatio ;         % maximum torque generated by a motor on the front axle [Nm]
        car.Mf_slewRate  = 16000;                      % maximum slew rate of the generated torque on the rear axle [Nm/s]0.5 je ca 1000/s idk preco
        car.Mf_jerk       = 800;                           % 1000 bolo cca okay
        car.Mr_max       = 29.1 * 2/car.tracks * car.gearRatio ;         % maximum torque generated by a motor on the rear axle [Nm]
        car.Mr_slewRate  = 100;                      % maximum slew rate of the generated torque on the rear axle [Nm/s]
        car.Yt_max       = (car.Mf_max/car.wheelradius + car.Mr_max/car.wheelradius)*car.track;                    % maximum Yaw moment
        car.PwrMax       = 80000;
        car.PwrMin       = -40000;
        car.maxSpeed     = 40;                        %m/s
        car.AcpCapacity  = 7.4; %kWh
        car.BrakeBalance = 0.7; 
        car.PowertrainType     = PowertrainType;
        % "2WD" open diff
        % "4WD" open diff 
        % "4WDTV" 

        %car.car.trqSpeedCharTrq   = [  -0.01 -14.5 -18   -25  -28   -29.1  -29.1 29.1    29.1      28    25   18    14.5  0.01];
        %car.car.trqSpeedCharSpeed = [  10    11600 14000 16200 20000 22000 24000];
        car.trqSpeedCharTrq   = [ 29.1   29.1  28    25    18    14.5  0.01]*car.gearRatio/car.wheelradius;
        car.trqSpeedCharSpeed = [  0    11600 14000 16200 20000 22000 24000]*pi/30/car.gearRatio; %calculatd on wheel omega
        car.trqSpeedCharTrq   = [ 29.1   29.1    25    18     0.01]*car.gearRatio/car.wheelradius;
        car.trqSpeedCharSpeed = [  0    11600 16200 20000  24000]*pi/30/car.gearRatio; %calculatd on wheel omega
        car.losses = 0.1;
        %TrqSpeedMap = casadi.interpolant('LUT','bspline',{car.car.trqSpeedCharSpeed},car.car.trqSpeedCharTrq);
        %TrqSpeedMap(2.5)
        %% Tire and suspension parameters
        car.E = 0.23;
        car.D = 1;
        car.B = 0.3;
        car.C = 1;
%         E = 0.23;
%         D = 1.2;
%         B = 0.2;
%         C = 1.3;
        car.Sus_t = 0.2;                          % suspension time constant for 1st order system
        car.tire_fxFactor = 1.5 ;                 % max Fx = Fz * tire_fxFactor
        car.tire_fyFactor = 1.3 ;                 % max Fy = Fz * tire_fyFactor
        %car.ftire = @(alph, Fz, p)(alph/pi*180)* Fz * car.tire_stifness ; %
        %car.ftire = @(alph,Fz, p)  Fz* car.D*sin(car.C*atan(car.B*(alph/pi*180)  - car.E*atan(car.B*(alph/pi*180))));

        %car.ftire = @(alph,Fz, p)  Fz.* D.*sin(C.*atan(B.*(alph./pi.*180)  - E.*atan(B.*(alph/pi.*180))));
        car.ftire = @(alph, Fz, car)(alph./pi.*180)./5.* Fz .* car.tire_fyFactor ; %

        %% Aerodynamics parameters
        car.CL  = -4.76;
        car.CD  = 1.63;
        car.A   = 1;
        car.COP = 0.512;    % Center of pressure on rear ratio
        car.wingLength_f = 1.6;
        %% gepd parameters
        car.gepdToggle = gepdToggle;
        car.gepdMass = 20; %mass of gepd in kg
        car.gepdMaxPower = 12000;               % Watts        % Force in Newton
        car.gepdForceCoeff = [720, 0]; % Force in Newton -16.35
        car.gepdCapacity = 0.93;                 % capacity of gepd battery in kWh
        car.gepdSlewRate = 1/3;                 % 0 to MaxPower percent in 3 seconds
        %opti.subject_to(cl/cd <=3)

        car.m = car.m + car.gepdToggle*car.gepdMass;

        %% environment parameters
        car.g = 9.81;
        car.airDensity = 1.225;
        car.steeredAxle = 'front'; % 'front', 'rear', 'both'
        car.drivenAxle  = 'both'; % 'front', 'rear', 'both'
        car.discipline = "autoX";

    case "HAFO24AutoXGEPDREF"
        %createCar with infinte acp, gepd acp capacity and gepd on for autoX
        car = carCreate("HAFO24");
        car.AcpCapacity  = 7.4*4; %kWh
        car.gepdCapacity = 1.7*4;                 % capacity of gepd battery in kWh
        car.steeredAxle ="both";

        case "HAFO24AutoXnoGEPD"
        %createCar with infinte acp, gepd acp capacity and gepd on for autoX
        car = carCreate("HAFO24");
        car.AcpCapacity  = 7.4*4; %kWh
        car.gepdToggle = 0;

    otherwise
        disp("no other car exists")
end

