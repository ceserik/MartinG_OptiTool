% Create UIFigure
%fig = uifigure('Name', 'Custom Layout',[0 0 1600 900],'Resize', 'off');

fig = uifigure('Name', 'My App', 'Position', [0 0 1600 900], 'Resize', 'off');


% Main grid: 1 row x 2 columns
mainGrid = uigridlayout(fig, [1, 2]);
mainGrid.ColumnWidth = {'2x','1x'};  % Left big plot, right narrow
mainGrid.RowHeight = {'1x'};

% === Left: Big Plot ===
axMain = uiaxes(mainGrid);
title(axMain, 'Main Plot');
plot(axMain, sin(0:0.1:10));

% === Right: Sub-grid with 2 rows ===
rightGrid = uigridlayout(mainGrid, [4, 1]);
rightGrid.RowHeight = {'1x', '1x','1x','1x'};  % Top plot flexible, bottom controls
rightGrid.ColumnWidth = {'1x'};

% === Top Right: Small Plot ===
minimap = uiaxes(rightGrid);
title(minimap, 'Minimap');
%plot(minimap, rand(10,1));

% === Top Right: Small Plot ===
torques = uiaxes(rightGrid);
title(torques, 'Torques');
%plot(torques, rand(10,1));

% === Top Right: Small Plot ===
statistics = uiaxes(rightGrid);
title(statistics, 'Statistics');
plot(statistics, rand(10,1));
% Turn off axes visuals
statistics.XColor = 'none';
statistics.YColor = 'none';
statistics.XTick = [];
statistics.YTick = [];
axis(statistics, [0 1 0 1]);  % Normalized axis for placing text easily
title(statistics, 'Statistics');

% Example speed and time values
speed = 0;      % km/h
elapsedTime = 0;  % seconds

% Display values using text
text(statistics, 0.05, 0.7, sprintf('Speed: %.1f km/h', speed), 'FontSize', 14);
text(statistics, 0.05, 0.5, sprintf('Time: %.1f s', elapsedTime), 'FontSize', 14);



% === Bottom Right: Controls ===
controlPanel = uipanel(rightGrid);
controlPanel.Title = 'Controls';

% Add buttons inside control panel
controlGrid = uigridlayout(controlPanel, [4, 1]);
btnRun = uibutton(controlGrid, 'Text', 'Render');
uibutton(controlGrid, 'Text', 'Simulate');
filename = char(string(datetime('now', 'Format', 'yyyyMMdd_HHmmss')) + ".avi");
filenameInput = uieditfield(controlGrid, 'text', ...
    'Placeholder', 'e.g. data_run_01.csv', ...
    'Value', filename);



%powertrainType = char(string(datetime('now', 'Format', 'yyyyMMdd_HHmmss')) + ".avi");
powertrain = uieditfield(controlGrid, 'text', ...
    'Placeholder', 'e.g. data_run_01.csv', ...
    'Value', "4WD");



%% torques



btnRun.ButtonPushedFcn = @(src, event) runCallback([axMain minimap torques statistics,fig],mydata,filenameInput);

function runCallback(axes,mydata,filename)
    if ~endsWith(filename.Value, '.avi', 'IgnoreCase', true)
        warning('Filename must end with ".avi"');
        return;
    end
    
    renderVideo(mydata,axes,filename.Value)
end




function Simulate(axes,mydata,filename)
    if ~endsWith(filename.Value, '.avi', 'IgnoreCase', true)
        warning('Filename must end with ".avi"');
        return;
    end
    
    renderVideo(mydata,axes,filename.Value)
end





